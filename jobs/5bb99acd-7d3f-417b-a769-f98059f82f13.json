{
  "id" : "5bb99acd-7d3f-417b-a769-f98059f82f13",
  "name" : "ATG Catalog to SFCC",
  "enabled" : false,
  "tasks" : [ {
    "id" : "ed3e0694-659d-4d6b-b5da-e6879635f95f",
    "ordinal" : 1,
    "taskParameters" : [ {
      "id" : "8d7635b8-e2d4-4d55-8a43-8c5dead1c543",
      "ordinal" : 1,
      "value" : "",
      "desc" : "Login user for authentication",
      "name" : "user",
      "valueType" : 0,
      "refId" : "4f75fa01-c582-49aa-8f20-1b48462a8b28",
      "refValue" : "johnny.appleseed",
      "created" : [ 2019, 7, 18, 15, 16, 0, 294000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 294000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "df435869-939d-4b1d-97b5-ff72ad67eaf9",
      "ordinal" : 2,
      "value" : "",
      "desc" : "Login password for authentication",
      "name" : "password",
      "valueType" : 0,
      "refId" : "48fbf631-e014-45ee-a8eb-298ac7d1fa21",
      "refValue" : "somepassword",
      "created" : [ 2019, 7, 18, 15, 16, 0, 295000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 295000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "81a45afb-d9f8-470a-af56-4ab4ace8b28e",
      "ordinal" : 3,
      "value" : "s3://s3.amazonaws.com/com.ignitioncommerce.transform.input/catalog/.*.xml",
      "desc" : "URL to file",
      "name" : "url",
      "valueType" : 0,
      "refId" : "45c250b3-72b5-4d81-a392-6ab7c6f5709d",
      "refValue" : "ftp://someftphost/input/*.xml",
      "created" : [ 2019, 7, 18, 15, 16, 0, 295000000 ],
      "updated" : [ 2019, 7, 18, 15, 17, 16, 500000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "fa15162f-1543-43c0-9b83-77f38905ddb0",
      "ordinal" : 4,
      "value" : "Products",
      "desc" : "Key name of output file",
      "name" : "outputKey",
      "valueType" : 0,
      "refId" : "201b77ea-8e35-4c3c-9f45-dd8afc123e10",
      "refValue" : "OutputFileKey",
      "created" : [ 2019, 7, 18, 15, 16, 0, 296000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 296000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "5d6cb920-4c16-48f3-80bd-7405b3dd6e1c",
      "ordinal" : 5,
      "value" : "var listIterator = files.iterator();\nwhile (listIterator.hasNext()) {\n    var item = listIterator.next();\n    var thisName = item.getOriginalFileName();\n    print(thisName);\n    if (thisName.indexOf('sku.xml') === -1 && thisName.indexOf('product.xml') === -1 && thisName.indexOf('manuf.xml') === -1&& thisName.indexOf('media.xml') === -1) {\n \t    listIterator.remove();\n \t}\n}\n",
      "desc" : "Javascript function to filter results",
      "name" : "filterFunction",
      "valueType" : 2,
      "refId" : "5f033806-4a10-45cc-8624-047cfc4bfb93",
      "refValue" : "function filter(files) {\n\treturn files;\n}",
      "created" : [ 2019, 7, 18, 15, 16, 0, 296000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 296000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "9f6b04c2-94e4-43ec-81af-4eca4ce10205",
      "ordinal" : 6,
      "value" : "",
      "desc" : "Sort function to use",
      "name" : "sortFunction",
      "valueType" : 2,
      "refId" : "8ff654e9-a4bf-4eee-b00e-b5a443e6ee2c",
      "refValue" : "function sort(files) {\n   return files;\n}",
      "created" : [ 2019, 7, 18, 15, 16, 0, 297000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 297000000 ],
      "language" : "js",
      "refLanguage" : "js"
    } ],
    "job" : {
      "id" : "5bb99acd-7d3f-417b-a769-f98059f82f13",
      "name" : "ATG Catalog to SFCC",
      "enabled" : false,
      "desc" : "",
      "status" : "Ready",
      "key" : "IC-00000005",
      "readOnly" : false,
      "environment" : {
        "id" : "89689ad1-f311-4bd7-aacd-0188ded73369"
      },
      "domain" : {
        "id" : "bd629e46-0892-4060-abe4-fc7269247405",
        "name" : "Ignition",
        "timeZone" : "America/New_York",
        "applicationURL" : "http://demo.ignitiontransform.com",
        "awsRegion" : "us-east-1",
        "updated" : [ 2018, 10, 16, 18, 33, 20, 313000000 ],
        "created" : [ 1970, 1, 18, 14, 19, 5, 459000000 ]
      },
      "version" : 271,
      "updated" : [ 2019, 7, 18, 15, 17, 16, 508000000 ],
      "created" : [ 2019, 7, 18, 15, 16, 0, 289000000 ],
      "folder" : { },
      "promiseEnabled" : false
    },
    "name" : "Download File to Dictionary Task",
    "clazz" : "core.DownloadFileToDictionaryTask",
    "enabled" : true,
    "desc" : "Task used to download a file from FTP, SFTP, WebDav, S3, or Local to dictionary entry.",
    "refId" : "84211b05-40ce-4939-874d-825b983c3bda",
    "stopOnError" : true,
    "reportOnError" : true,
    "nodeTask" : false,
    "notify" : false,
    "nodeEligible" : true,
    "interval" : 0,
    "created" : [ 2019, 7, 18, 15, 16, 0, 291000000 ],
    "updated" : [ 2019, 7, 18, 15, 16, 0, 291000000 ],
    "reference" : false
  }, {
    "id" : "09e10311-fb3c-418e-9fd3-1f8dbe1068ea",
    "ordinal" : 2,
    "taskParameters" : [ {
      "id" : "954a9861-3296-489f-919c-ef8e510ab952",
      "ordinal" : 1,
      "value" : "var inDebug = dict.inDebug; \n$includeScript('global');\n/**\n * Shared Variations\n */\nconst SHARED_VARIATIONS = {\n    weightsharedvariation: 'Dog',\n    milligrams: 'Milligrams',\n    pkqty: 'Package Qty',\n    skuColor: 'Color',\n    skuSize: 'Size'\n};\n/**\n * extend our project json to include custom attributes\n * Params\n *   @param productObj - Our newly created product\n *   @param atgProduct - atgProduct obj, from atg repository\n */\nfunction extendProduct(productObj, atgProduct) {\n    addCustomAttribute(atgProduct, productObj, 'bannedProducts');\n    addCustomAttribute(atgProduct, productObj, 'benefits'); \n    addCustomAttribute(atgProduct, productObj, 'brandname');\n    addCustomAttribute(atgProduct, productObj, 'catsalesvolume');\n    addCustomAttribute(atgProduct, productObj, 'controlledsubstance');\n    addCustomAttribute(atgProduct, productObj, 'disallowAsRecommendation');\n    addCustomAttribute(atgProduct, productObj, 'discontinuedUpsell1');\n    addCustomAttribute(atgProduct, productObj, 'discontinuedUpsell2');\n    addCustomAttribute(atgProduct, productObj, 'discontinuedUpsell3');\n    addCustomAttribute(atgProduct, productObj, 'discountable');\n    addCustomAttribute(atgProduct, productObj, 'doNotShipToCountries');\n    addCustomAttribute(atgProduct, productObj, 'dogsalesvolume');\n    addCustomAttribute(atgProduct, productObj, 'expertRating');\n    addCustomAttribute(atgProduct, productObj, 'expertReviewCount'); \n    addCustomAttribute(atgProduct, productObj, 'fdainfo');\n    addCustomAttribute(atgProduct, productObj, 'fixedRelatedProducts');\n    addCustomAttribute(atgProduct, productObj, 'genericname');\n    addCustomAttribute(atgProduct, productObj, 'group');\n    addCustomAttribute(atgProduct, productObj, 'hasmap');\n    addCustomAttribute(atgProduct, productObj, 'healthIssues'); // lookup\n    addCustomAttribute(atgProduct, productObj, 'howToUseTab');\n    addCustomAttribute(atgProduct, productObj, 'howToUseTabRwd');\n    addCustomAttribute(atgProduct, productObj, 'ingredients'); // lookup\n    addCustomAttribute(atgProduct, productObj, 'ingredientsTab');\n    addCustomAttribute(atgProduct, productObj, 'ingredientsTabName');\n    addCustomAttribute(atgProduct, productObj, 'ingredientsTabRwd'); \n    addCustomAttribute(atgProduct, productObj, 'madeinusa');\n    addCustomAttribute(atgProduct, productObj, 'nonreturnable');   \n    addCustomAttribute(atgProduct, productObj, 'privateLabel');\n    addCustomAttribute(atgProduct, productObj, 'productInfoTab');\n    addCustomAttribute(atgProduct, productObj, 'productInfoTabRwd'); \n    addCustomAttribute(atgProduct, productObj, 'salesVolume');\n    addCustomAttribute(atgProduct, productObj, 'symptoms');  // lookup\n    addCustomAttribute(atgProduct, productObj, 'usageImageURL'); \n    addCustomAttribute(atgProduct, productObj, 'usedFor');     \n}\n/**\n * extend our variant json to include custom attributes\n * Params\n *   @param variantObj - Our newly created product\n *   @param atgSku - atgProduct obj, from atg repository\n */\nfunction extendVariant(variantObj, atgSku) {\n    addCustomAttribute(atgSku, variantObj, 'altHeadline'); \n    addCustomAttribute(atgSku, variantObj, 'altProd1Heading'); \n    addCustomAttribute(atgSku, variantObj, 'altProd2Heading'); \n    addCustomAttribute(atgSku, variantObj, 'altProd3Heading'); \n    addCustomAttribute(atgSku, variantObj, 'altProd4Heading'); \n    addCustomAttribute(atgSku, variantObj, 'altProd1Info'); \n    addCustomAttribute(atgSku, variantObj, 'altProd2Info'); \n    addCustomAttribute(atgSku, variantObj, 'altProd3Info'); \n    addCustomAttribute(atgSku, variantObj, 'altProd4Info'); \n    addCustomAttribute(atgSku, variantObj, 'altProd1SKU1'); \n    addCustomAttribute(atgSku, variantObj, 'altProd1SKU2'); \n    addCustomAttribute(atgSku, variantObj, 'altProd2SKU1'); \n    addCustomAttribute(atgSku, variantObj, 'altProd2SKU2'); \n    addCustomAttribute(atgSku, variantObj, 'altProd3SKU1'); \n    addCustomAttribute(atgSku, variantObj, 'altProd3SKU2'); \n    addCustomAttribute(atgSku, variantObj, 'altProd4SKU1'); \n    addCustomAttribute(atgSku, variantObj, 'altProd4SKU2'); \n    addCustomAttribute(atgSku, variantObj, 'altSubHeadline');  \n    addCustomAttribute(atgSku, variantObj, 'backorderdate');\n    addCustomAttribute(atgSku, variantObj, 'backorderMessage');\n    addCustomAttribute(atgSku, variantObj, 'bestvalue');\n    addCustomAttribute(atgSku, variantObj, 'biggerPackSkus');\n    addCustomAttribute(atgSku, variantObj, 'catminweight');\n    addCustomAttribute(atgSku, variantObj, 'catmaxweight');\n    addCustomAttribute(atgSku, variantObj, 'discountable');\n    addCustomAttribute(atgSku, variantObj, 'donotsplit');\n    addCustomAttribute(atgSku, variantObj, 'generic');\n    addCustomAttribute(atgSku, variantObj, 'genericsPageText');\n    addCustomAttribute(atgSku, variantObj, 'groundonly');\n    addCustomAttribute(atgSku, variantObj, 'life');\n    addCustomAttribute(atgSku, variantObj, 'mapprice'); \n    addCustomAttribute(atgSku, variantObj, 'maxweight');\n    addCustomAttribute(atgSku, variantObj, 'milligrams');\n    addCustomAttribute(atgSku, variantObj, 'minweight');\n    addCustomAttribute(atgSku, variantObj, 'mpn');\n    addCustomAttribute(atgSku, variantObj, 'nonreturnable');\n    addCustomAttribute(atgSku, variantObj, 'petSize');\n    addCustomAttribute(atgSku, variantObj, 'pillform');\n    addCustomAttribute(atgSku, variantObj, 'pkqty');\n    addCustomAttribute(atgSku, variantObj, 'preCartHeadline');\n    addCustomAttribute(atgSku, variantObj, 'preCartYesButtonURL');\n    addCustomAttribute(atgSku, variantObj, 'recommendedSkus');\n    addCustomAttribute(atgSku, variantObj, 'shippingOverride');\n    addCustomAttribute(atgSku, variantObj, 'shipweight');\n    addCustomAttribute(atgSku, variantObj, 'showMultiPreCart');\n    addCustomAttribute(atgSku, variantObj, 'showPreCart');\n    addCustomAttribute(atgSku, variantObj, 'skuColor');\n    addCustomAttribute(atgSku, variantObj, 'skuFlavor');\n    addCustomAttribute(atgSku, variantObj, 'skuSize');\n    addCustomAttribute(atgSku, variantObj, 'species');    \n    addCustomAttribute(atgSku, variantObj, 'upsell'); // lookup\n    addCustomAttribute(atgSku, variantObj, 'mapPrice');       \n}\n\n\n//#region PRIVATE\nvar SAXParserFactory = Java.type('javax.xml.parsers.SAXParserFactory');\nvar StringBuilder = Java.type('java.lang.StringBuilder');\nvar HandlerRef = Java.extend(Java.type('org.xml.sax.helpers.DefaultHandler'));\nvar FileInputStream = Java.type('java.io.FileInputStream');\nvar InputSource = Java.type('org.xml.sax.InputSource');\nvar SimpleDateFormat = Java.type('java.text.SimpleDateFormat');\nvar dictToXml = ICT.TASK('DictionaryToXMLTask');\nvar StringObj = Java.type('java.lang.String');\n\nvar skuFile = getXmlFileByName('sku');\nvar productFile = getXmlFileByName('product');\nvar mfrFile = getXmlFileByName('manuf');\nvar mediaFile = getXmlFileByName('media');\n\nvar skus = {};\nvar skuPricing = [];\nvar sharedVariationMaps = [];\n\n// first let's read all of our skus\nvar chars = new StringBuilder();\nvar factory = SAXParserFactory.newInstance();\nvar map = null;\nvar attr = '';\nvar saxParser = factory.newSAXParser();\nvar handler = new HandlerRef({\n\tstartElement: function(uri, localName, qName, attributes) {\n\t\tif (qName === 'add-item') {\n            map = {};\n            map.id = attributes.getValue('id');\n            chars = new StringBuilder();\n\t\t} else if (qName === 'set-property') {\n\t\t    attr = attributes.getValue('name');\n\t\t}   \n\t},\n\tcharacters: function(ch, start, length) {\n\t    if (map !== null) {\n\t        var value = new StringObj(ch, start, length).trim();\n            if (value.length > 0) {\n                chars.append(value);\n            }\n\t    }\n\t}, \n\tendElement: function(uri, localName, qName) {\n\t\tif (qName === 'add-item') {\n            skus[map.id.trim()] = map;\n            map = null;\n\t\t} else if (qName === 'set-property') {\n            map[attr] = chars.toString().trim();\n            chars = new StringBuilder();\n\t\t} \n\t}\n});\nvar fis = new FileInputStream(skuFile);\nsaxParser.parse(new InputSource(fis), handler);\nfis.close();\n\n// manufacturers\nvar manufacturers = {};\n\nhandler = new HandlerRef({\n\tstartElement: function(uri, localName, qName, attributes) {\n\t\tif (qName === 'add-item') {\n            map = {};\n            map.id = attributes.getValue('id');\n            chars = new StringBuilder();\n\t\t} else if (qName === 'set-property') {\n\t\t    attr = attributes.getValue('name');\n\t\t}   \n\t},\n\tcharacters: function(ch, start, length) {\n\t    if (map !== null) {\n\t        var value = new StringObj(ch, start, length).trim();\n            if (value.length > 0) {\n                chars.append(value);\n            }\n\t    }\n\t}, \n\tendElement: function(uri, localName, qName) {\n\t\tif (qName === 'add-item') {\n            manufacturers[map.id.trim()] = map;\n            map = null;\n\t\t} else if (qName === 'set-property') {\n            map[attr] = chars.toString().trim();\n            chars = new StringBuilder();\n\t\t} \n\t}\n});\nfis = new FileInputStream(mfrFile);\nsaxParser.parse(new InputSource(fis), handler);\nfis.close();\n\n// media items\nvar mediaItems = {};\n\nhandler = new HandlerRef({\n\tstartElement: function(uri, localName, qName, attributes) {\n\t\tif (qName === 'add-item') {\n            map = {};\n            map.id = attributes.getValue('id');\n            chars = new StringBuilder();\n\t\t} else if (qName === 'set-property') {\n\t\t    attr = attributes.getValue('name');\n\t\t}   \n\t},\n\tcharacters: function(ch, start, length) {\n\t    if (map !== null) {\n\t        var value = new StringObj(ch, start, length).trim();\n            if (value.length > 0) {\n                chars.append(value);\n            }\n\t    }\n\t}, \n\tendElement: function(uri, localName, qName) {\n\t\tif (qName === 'add-item') {\n            mediaItems[map.id.trim()] = map;\n            map = null;\n\t\t} else if (qName === 'set-property') {\n            map[attr] = chars.toString().trim();\n            chars = new StringBuilder();\n\t\t} \n\t}\n});\nfis = new FileInputStream(mediaFile);\nsaxParser.parse(new InputSource(fis), handler);\nfis.close();\n\n// create product map\n\nvar products = {};\n\nsaxParser = factory.newSAXParser();\nhandler = new HandlerRef({\n\tstartElement: function(uri, localName, qName, attributes) {\n\t\tif (qName === 'add-item') {\n            map = {};\n            map.id = attributes.getValue('id');\n            chars = new StringBuilder();\n\t\t} else if (qName === 'set-property') {\n\t\t    attr = attributes.getValue('name');\n\t\t}   \n\t},\n\tcharacters: function(ch, start, length) {\n\t    if (map !== null) {\n\t        var value = new StringObj(ch, start, length).trim();\n            if (value.length > 0) {\n                chars.append(value);\n            }\n\t    }\n\t}, \n\tendElement: function(uri, localName, qName) {\n\t\tif (qName === 'add-item') {\n            products[map.id] = map;\n            map = null;\n\t\t} else if (qName === 'set-property') {\n            map[attr] = chars.toString().trim();\n            chars = new StringBuilder();\n\t\t} \n\t}\n});\nfis = new FileInputStream(productFile);\nsaxParser.parse(new InputSource(fis), handler);\nfis.close();\n\nvar catalog = {\n    'catalog': {\n        '@xmlns': 'http://www.demandware.com/xml/impex/catalog/2006-10-31',\n        '@catalog-id': 'main'\n    }\n};\n\nvar idx = 0;\nfor (let k in products) {\n    if ('childSKUs' in products[k]) {\n        var skuIds = products[k].childSKUs.split(',');\n        for (var skuId of skuIds) {\n            var thisId = skuId.trim();\n            if (thisId in skus) {\n                catalog.catalog['product['+idx+']'] = buildSku(skus[thisId]);\n                extendVariant(catalog.catalog['product['+idx+']'], skus[thisId]);\n                idx++;\n            }\n        }\n    }\n    catalog.catalog['product['+idx+']'] = buildProduct(products[k]);\n    extendProduct(catalog.catalog['product['+idx+']'], products[k]);\n    idx++;\n}\n\nidx = 0;\n\nfor (var k in SHARED_VARIATIONS) {\n    appendVariationAttributes(catalog.catalog, k, SHARED_VARIATIONS[k], idx, sharedVariationMaps[idx]);\n    idx++;\n}\n\ndictToXml.script(dict, catalog, 'CatalogOutput');\n\nvar pb = {\n    'pricebooks': {\n        '@xmlns': 'http://www.demandware.com/xml/impex/pricebook/2006-10-31',\n        'pricebook[0]': {\n            'header': {\n                \n            },\n            'price-tables': {\n            }\n        },\n        'pricebook[1]': {\n            'header': {\n                \n            },\n            'price-tables': {\n            }\n        }\n    }\n};\n\nvar listPriceIdx = 0;\nvar salePriceIdx = 0;\n\nfor (var skuPriceIdx in skuPricing) {\n     var skuPrice = skuPricing[skuPriceIdx];\n     pb.pricebooks['pricebook[0]'].header = {\n         '@pricebook-id': 'list-usd',\n     };\n    pb.pricebooks['pricebook[1]'].header = {\n        '@pricebook-id': 'sale-usd',\n    };    \n    if ('listPrice' in skuPrice) {\n        pb.pricebooks['pricebook[0]']['price-tables']['price-table['+listPriceIdx+']'] = {\n            '@product-id': skuPrice.skuId.trim(),\n            'online-from': '2013-11-22T06:00:00.000Z',\n            'online-to': '2500-01-02T06:00:00.000Z',\n            'amount':{\n                '@quantity': 1,\n                '_text': skuPrice.listPrice\n            }\n        };\n        listPriceIdx++;\n        pb.pricebooks['pricebook[1]']['price-tables']['price-table['+salePriceIdx+']'] = {\n            '@product-id': skuPrice.skuId.trim(),\n            'online-from': '2013-11-22T06:00:00.000Z',\n            'online-to': '2500-01-02T06:00:00.000Z',\n            'amount':{\n                '@quantity': 1,\n                '_text': skuPrice.salePrice\n            }\n        };\n        salePriceIdx++;\n    }\n}\n\ndictToXml.script(dict, pb, 'PricingOutput');\n\nfunction buildSku(skuObj) {\n    var sku = {\n        '@product-id': skuObj.id,\n        'ean':'',\n        'upc': skuObj.upc,\n        'unit':'',\n        'min-order-quantity': 1,\n        'step-quantity': 1,\n        'display-name': {\n            '_text': '<![CDATA['+skuObj.displayName+']]>',\n            '@xml:lang': 'x-default'\n        },\n        'online-flag': true,\n        'online-to':'2060-08-28T15:47:26',\n        'available-flag': true,\n        'searchable-flag': true,\n        // 'images': {\n            \n        // },\n        'page-attributes': '',\n        'custom-attributes': {\n        }\n    };\n    if ('endDate' in skuObj) {\n        sdf = new SimpleDateFormat('MM/dd/yyyy HH:mm:ss');\n        var v = skuObj.endDate.trim();\n        if (v !== '') {\n            var dt = sdf.parse(v);\n            sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\");\n            sku['online-to'] = sdf.format(dt);\n        }\n    }\n    skuPricing[skuPricing.length] = {\n        skuId: skuObj.id,\n        listPrice: skuObj.listPrice,\n        salePrice: skuObj.salePrice,\n        wholesalePrice: skuObj.wholesalePrice\n    };\n\n    if ('auxiliaryMedia' in skuObj) {\n        var parts = skuObj.auxiliaryMedia.split(',');\n        var auxMedia = '';\n        for (var p in parts) {\n            var img = parts[p];\n            var parts2 = img.split('=');\n            var parts3 = mediaItems[parts2[1]].url;\n            parts3 = parts3.substring(parts3.lastIndexOf('/')+1);\n            parts3 = parts3.replace('_80', '');\n            if (parts3.length > 0) {\n                auxMedia += 'images/large/' + parts3.trim() + ',';\n            }\n        }\n        if (auxMedia.length > 0) {\n            sku['custom-attributes']['custom-attribute[19]'] = {\n                '_text': '<![CDATA['+auxMedia.substring(0, auxMedia.length-1)+']]>',\n                '@attribute-id': 'auxiliaryMedia'\n            };\n        }\n    }\n    if (skuObj.wholesalePrice !== undefined) {\n        sku['custom-attributes']['custom-attribute[33]'] = {\n            '_text': '<![CDATA['+skuObj.wholesalePrice+']]>',\n            '@attribute-id': 'mapprice'\n        };     \n    }    \n    if ('minweight' in skuObj && skuObj.minweight !== '__NULL__') {\n        sku['custom-attributes']['custom-attribute[56]'] = {\n            '_text': '<![CDATA['+skuObj.species + '|' + formatWeight(skuObj.minweight, skuObj.maxweight)+']]>',\n            '@attribute-id': 'weightsharedvariation'\n        };\n    }\n    return sku;\n}\n\nvar caIdx = 100;\nfunction addCustomAttribute(obj, newObj, fromname, toname) {\n    if (fromname in obj) {\n        var v = obj[fromname].trim();\n        if (v === '__NULL__') {\n            return;\n        }\n        var tname = fromname;\n        if (toname !== undefined) {\n            tname = toname;\n        }\n        newObj['custom-attributes']['custom-attribute['+caIdx+']'] = {\n            '_text': '<![CDATA['+v+']]>',\n            '@attribute-id': tname\n        };\n        caIdx++;\n    }\n}\n\nfunction buildProduct(prodObj) {\n    var product = {\n        '@product-id': prodObj.id,\n        'ean':'',\n        'upc': prodObj.upc,\n        'unit':'',\n        'min-order-quantity': 1,\n        'step-quantity': 1,\n        'display-name': {\n            '_text': '<![CDATA['+prodObj.displayName+']]>',\n            '@xml:lang': 'x-default'\n        },\n        'short-description': {\n            '_text': '<![CDATA['+prodObj.description+']]>',\n            '@xml:lang': 'x-default'\n        },\n        'long-description': {\n            '_text': '<![CDATA['+prodObj.longDescription+']]>',\n            '@xml:lang': 'x-default'\n        },\n        'online-flag': true,\n        'online-to':'2060-08-28T15:47:26',\n        'available-flag': true,\n        'searchable-flag': true,\n        'images': {\n            \n        },\n        'tax-class-id': 'default',\n        'brand': '<![CDATA['+prodObj.brand+']]>',\n        'manufacturer-name': '',        \n        'page-attributes': {\n            'page-title': {\n                '_text': '<![CDATA['+prodObj.metaTitle+']]>',\n                '@xml:lang': 'x-default'\n            },\n            'page-description': {\n                '_text': '<![CDATA['+prodObj.metaDescription+']]>',\n                '@xml:lang': 'x-default'\n            },\n            // 'page-keywords': {\n            //     '_text': '<![CDATA['+prodObj.keywords+']]>',\n            //     '@xml:lang': 'x-default'\n            // }\n        },\n        'custom-attributes': {\n        },\n        'variations': {\n            'attributes': {\n                \n            },\n            'variants': {\n                \n            }\n        },\n        'classification-category': prodObj.directParentCategory\n    };\n    \n    var parts;\n    var pos = -1;\n    if ('largeImage' in prodObj) {\n        // if it begins with \"m\", then it's a media item\n        parts = mediaItems[prodObj.largeImage].url;\n        parts = parts.substring(parts.lastIndexOf('/')+1);\n        //parts = parts.replace('_420', '');\n        product.images['image-group[0]'] = {\n            '@view-type': 'large',\n            'image': {\n                '@path': 'images/large/' + parts.trim() \n            }\n        };\n    }\n    if ('auxiliaryMedia' in prodObj) {\n        parts = prodObj.auxiliaryMedia.split(',');\n        for (var p in parts) {\n            var img = parts[p];\n            var parts2 = img.split('=');\n            var parts3;\n            if (parts2[0] === 'video') {\n                parts3 = mediaItems[parts2[1]].url;\n                parts3 = parts3.substring(parts3.lastIndexOf('/')+1);\n                parts3 = parts3.replace('_80', '');\n                if (parts3.length > 0) {\n                    product.images['image-group[2]'] = {\n                        '@view-type': 'video',\n                        'image': {\n                            '@path': 'images/large/' + parts3.trim() \n                        }\n                    };\n                }\n            } else if (parts2[0] === 'jwplayer') {\n                parts3 = mediaItems[parts2[1]].url;\n                parts3 = parts3.substring(parts3.lastIndexOf('/')+1);                \n                parts3 = parts3.replace('_80', '');\n                if (parts3.length > 0) {\n                    product.images['image-group[3]'] = {\n                        '@view-type': 'jwplayer',\n                        'image': {\n                            '@path': 'images/large/' + parts3.trim() \n                        }\n                    };\n                }\n            } else if (parts2[0] === 'dog') {\n                parts3 = mediaItems[parts2[1]].url;\n                parts3 = parts3.substring(parts3.lastIndexOf('/')+1);\n                parts3 = parts3.replace('_80', '');\n                if (parts3.length > 0) {\n                    product.images['image-group[4]'] = {\n                        '@view-type': 'dog',\n                        'image': {\n                            '@path': 'images/large/' + parts3.trim() \n                        }\n                    };\n                }\n            } else if (parts2[0] === 'cat') {\n                parts3 = mediaItems[parts2[1]].url;\n                parts3 = parts3.substring(parts3.lastIndexOf('/')+1);\n                parts3 = parts3.replace('_80', '');\n                if (parts3.length > 0) {\n                    product.images['image-group[5]'] = {\n                        '@view-type': 'cat',\n                        'image': {\n                            '@path': 'images/large/' + parts3[0].trim()\n                        }\n                    };\n                }\n            } else if (parts2[0] === 'thumb1') {\n                parts3 = mediaItems[parts2[1]].url;\n                parts3 = parts3.substring(parts3.lastIndexOf('/')+1);\n                parts3 = parts3.replace('_80', '');\n                if (parts3.length > 0) {\n                    product.images['image-group[6]'] = {\n                        '@view-type': 'thumb1',\n                        'image': {\n                            '@path': 'images/large/' + parts3[0].trim()\n                        }\n                    };\n                }\n            }\n        }\n    }\n    var attrIdx = 0;\n    var varIdx = 0;\n    var usedAttr = {};\n    if ('childSKUs' in prodObj) {\n        var skuIds = prodObj.childSKUs.split(',');\n        for (var skuId of skuIds) {\n            var thisId = skuId.trim();\n            if (thisId in skus) {\n                var sku = skus[thisId];\n                var smIdx = 0;\n                for (var k in SHARED_VARIATIONS) {\n                    sharedVariationMaps[smIdx] = {};\n                    addSharedAttribute(product, sku, k, sharedVariationMaps[smIdx], smIdx, usedAttr);\n                    smIdx++;\n                }\n                // //addSharedAttribute(product, sku, 'species', speciesMap, 1, usedAttr);\n                // addSharedAttribute(product, sku, 'weightsharedvariation', weightSharedVariationMap, 2, usedAttr);\n                // //addSharedAttribute(product, sku, 'catweightsharedvariation', catWeightSharedVariationMap, 3, usedAttr);\n                // addSharedAttribute(product, sku, 'milligrams', milligramsMap, 4, usedAttr);\n                // addSharedAttribute(product, sku, 'pkqty', pkqtyMap, 5, usedAttr);\n                // addSharedAttribute(product, sku, 'skuColor', skuColorMap, 6, usedAttr);\n                // addSharedAttribute(product, sku, 'skuSize', skuSizeMap, 7, usedAttr);\n                // //addSharedAttribute(product, sku, 'life', lifeMap, 5, usedAttr);\n\n                product.variations.variants['variant['+varIdx+']'] = {\n                    '@product-id': thisId,\n                    '@default': (varIdx===0) ? true : false\n                };\n                varIdx++;\n            }\n        }\n    }  \n    if ('endDate' in prodObj) {\n        sdf = new SimpleDateFormat('MM/dd/yyyy HH:mm:ss');\n        var v = prodObj.endDate.trim();\n        if (v !== '') {\n            var dt = sdf.parse(v);\n            sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\");\n            product['online-to'] = sdf.format(dt);\n        }\n    } \n    var mfr = prodObj.pmManufacturer;\n    if (mfr === undefined) {\n        mfr = '';\n    } else {\n        mfr = manufacturers[mfr.trim()].displayName;\n    }    \n    product['manufacturer-name'] = '<![CDATA['+mfr+']]>';\n    \n\n    product['custom-attributes']['custom-attribute[31]'] = {\n        '_text': '<![CDATA['+prodObj.keywords+']]>',\n        '@attribute-id': 'pmPageKeywords'\n    };    \n\n\n    return product;\n}\n\nfunction appendVariationAttributes(catalog, name, displayName, idx, map) {\n    var vavIdx = 1;\n    catalog['variation-attribute['+idx+']'] = {\n        '@attribute-id': name,\n        '@variation-attribute-id': name,\n        '@slicing-attribute': 'false',\n        'display-name': {\n            '@xml:lang': 'x-default',\n            '_text': displayName\n        },\n        'variation-attribute-values': {\n        }\n    };\n    for (var k in map) {\n        var vv = map[k];\n        var attrValue = _escapeXml(vv);\n        var displayValue = vv;\n        if (name === 'weightsharedvariation') {\n            displayValue = vv.split('|')[1];\n        } else {\n            vv = vv.charAt(0).toUpperCase() + vv.substring(1);\n        }\n        catalog['variation-attribute['+idx+']']['variation-attribute-values']['variation-attribute-value['+vavIdx+']'] = {\n            '@value': attrValue,\n            'display-value': {\n                '@xml:lang': 'x-default',\n                '_text': '<![CDATA[' + displayValue + ']]>'\n            }\n        };\n        vavIdx++;\n    }\n}\n\nfunction formatWeight(min, max) {\n    var minsz,maxsz; \n    \n    if (parseInt(min) < 10) {\n        minsz = '0' + parseInt(min);\n    } else {\n        minsz = parseInt(min);\n    }\n    if (max === undefined) {\n        return minsz + 'lbs & up';\n    }\n    if (parseInt(max) < 10) {\n        maxsz = '0' + parseInt(max);\n    } else {\n        maxsz = parseInt(max);\n    }\n    \n    return minsz + '-' + maxsz + 'lbs';\n}\n\nfunction addSharedAttribute(product, sku, name, map, idx, usedAttr) {\n    if ((name in sku && sku[name].length > 0) || name === 'weightsharedvariation') {\n        var v;\n        if (name === 'weightsharedvariation') {\n            if (sku.minweight === undefined) return;\n            v = sku.species+'|'+formatWeight(sku.minweight, sku.maxweight);\n        } else {\n            v = sku[name].trim();\n        }\n        map[v] = v;\n        if (!(name in usedAttr)) {\n            product.variations.attributes['shared-variation-attribute['+idx+']'] = {\n                '@attribute-id': name,\n                '@variation-attribute-id': name\n            };\n            usedAttr[name] = true;\n        }\n    }    \n}\n\nfunction getXmlFileByName(name) {\n    var listIterator = dict.get('Products').iterator();\n    while (listIterator.hasNext()) {\n        var item = listIterator.next();\n        var thisName = item.getOriginalFileName();    \n\t\tif (thisName.indexOf(name) !== -1) {\n\t\t\treturn item.getLocalFile();\n\t\t}\n\t}\n\treturn null;\n}\n//#endregion\n\n\n",
      "desc" : "Script to execute",
      "name" : "script",
      "valueType" : 2,
      "refId" : "61734d1c-1ff6-4a2b-a251-00f3bd76b9ed",
      "refValue" : "Javascript",
      "created" : [ 2019, 7, 18, 15, 16, 0, 299000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 299000000 ],
      "language" : "js",
      "refLanguage" : "js"
    } ],
    "job" : {
      "id" : "5bb99acd-7d3f-417b-a769-f98059f82f13",
      "name" : "ATG Catalog to SFCC",
      "enabled" : false,
      "desc" : "",
      "status" : "Ready",
      "key" : "IC-00000005",
      "readOnly" : false,
      "environment" : {
        "id" : "89689ad1-f311-4bd7-aacd-0188ded73369"
      },
      "domain" : {
        "id" : "bd629e46-0892-4060-abe4-fc7269247405",
        "name" : "Ignition",
        "timeZone" : "America/New_York",
        "applicationURL" : "http://demo.ignitiontransform.com",
        "awsRegion" : "us-east-1",
        "updated" : [ 2018, 10, 16, 18, 33, 20, 313000000 ],
        "created" : [ 1970, 1, 18, 14, 19, 5, 459000000 ]
      },
      "version" : 271,
      "updated" : [ 2019, 7, 18, 15, 17, 16, 508000000 ],
      "created" : [ 2019, 7, 18, 15, 16, 0, 289000000 ],
      "folder" : { },
      "promiseEnabled" : false
    },
    "name" : "Script Task",
    "clazz" : "core.ScriptTask",
    "enabled" : true,
    "desc" : "Task used to execute custom javascript.",
    "refId" : "f5d44f40-cbd4-45fa-b45f-b062e546ad0f",
    "stopOnError" : true,
    "reportOnError" : true,
    "nodeTask" : false,
    "notify" : false,
    "nodeEligible" : false,
    "interval" : 0,
    "created" : [ 2019, 7, 18, 15, 16, 0, 297000000 ],
    "updated" : [ 2019, 7, 18, 15, 16, 0, 297000000 ],
    "reference" : false
  }, {
    "id" : "0c9ba17c-6d59-4ece-9c63-179a61a116b6",
    "ordinal" : 3,
    "taskParameters" : [ {
      "id" : "02ff72fa-8bee-4df3-bd6f-6606adc4ac9e",
      "ordinal" : 1,
      "value" : "",
      "desc" : "Login user for authentication",
      "name" : "user",
      "valueType" : 0,
      "refId" : "a68a11c6-cef6-4408-85f5-4f0728e8e3c7",
      "refValue" : "johnny.appleseed",
      "created" : [ 2019, 7, 18, 15, 16, 0, 310000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 310000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "c85bb743-a214-4213-91b0-0fa57fca7efc",
      "ordinal" : 2,
      "value" : "",
      "desc" : "Login password for authentication",
      "name" : "password",
      "valueType" : 0,
      "refId" : "a34fea04-c5b1-442c-975e-1655184f32f3",
      "refValue" : "somepassword",
      "created" : [ 2019, 7, 18, 15, 16, 0, 311000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 311000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "829336dd-752b-454b-b6dc-a0b78591702b",
      "ordinal" : 3,
      "value" : "file:///Users/msewell/Desktop/petmed-catalog.xml",
      "desc" : "URL to file",
      "name" : "url",
      "valueType" : 2,
      "refId" : "b102d706-66ce-4d8b-8944-ec8ba327b7b2",
      "refValue" : "ftp://someftphost/input/myfile.xml",
      "created" : [ 2019, 7, 18, 15, 16, 0, 311000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 311000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "29a55375-a3d1-44db-8a05-d27a16bad26f",
      "ordinal" : 4,
      "value" : "CatalogOutput",
      "desc" : "Key name of input file",
      "name" : "inputKey",
      "valueType" : 0,
      "refId" : "06532b8a-daf2-457c-8c65-701e9cc0ec01",
      "refValue" : "InputFileKey",
      "created" : [ 2019, 7, 18, 15, 16, 0, 312000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 312000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "153840e4-bb9a-4bab-a7e7-cf2416c74860",
      "ordinal" : 5,
      "value" : "true",
      "desc" : "Should we overwrite",
      "name" : "overwrite",
      "valueType" : 0,
      "refId" : "5fa90437-e92d-468d-8890-edf5c8a0f2bc",
      "refValue" : "true",
      "created" : [ 2019, 7, 18, 15, 16, 0, 312000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 312000000 ],
      "language" : "js",
      "refLanguage" : "js"
    } ],
    "job" : {
      "id" : "5bb99acd-7d3f-417b-a769-f98059f82f13",
      "name" : "ATG Catalog to SFCC",
      "enabled" : false,
      "desc" : "",
      "status" : "Ready",
      "key" : "IC-00000005",
      "readOnly" : false,
      "environment" : {
        "id" : "89689ad1-f311-4bd7-aacd-0188ded73369"
      },
      "domain" : {
        "id" : "bd629e46-0892-4060-abe4-fc7269247405",
        "name" : "Ignition",
        "timeZone" : "America/New_York",
        "applicationURL" : "http://demo.ignitiontransform.com",
        "awsRegion" : "us-east-1",
        "updated" : [ 2018, 10, 16, 18, 33, 20, 313000000 ],
        "created" : [ 1970, 1, 18, 14, 19, 5, 459000000 ]
      },
      "version" : 271,
      "updated" : [ 2019, 7, 18, 15, 17, 16, 508000000 ],
      "created" : [ 2019, 7, 18, 15, 16, 0, 289000000 ],
      "folder" : { },
      "promiseEnabled" : false
    },
    "name" : "Upload File from Dictionary Task",
    "clazz" : "core.UploadFileFromDictionaryTask",
    "enabled" : false,
    "desc" : "Task used to upload a file to FTP, SFTP, WebDav, S3, or Local from a dictionary entry.",
    "refId" : "fb285dc7-59db-4382-b004-df6ee6147084",
    "stopOnError" : true,
    "reportOnError" : true,
    "nodeTask" : false,
    "notify" : false,
    "nodeEligible" : true,
    "interval" : 0,
    "created" : [ 2019, 7, 18, 15, 16, 0, 306000000 ],
    "updated" : [ 2019, 7, 18, 15, 16, 0, 306000000 ],
    "reference" : false
  }, {
    "id" : "b6f05293-1ee4-43bd-a1e0-db4a296ff9ed",
    "ordinal" : 4,
    "taskParameters" : [ {
      "id" : "afc0b8bb-84df-4c15-a74f-eb69c010fae8",
      "ordinal" : 1,
      "value" : "",
      "desc" : "Login user for authentication",
      "name" : "user",
      "valueType" : 0,
      "refId" : "a68a11c6-cef6-4408-85f5-4f0728e8e3c7",
      "refValue" : "johnny.appleseed",
      "created" : [ 2019, 7, 18, 15, 16, 0, 314000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 314000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "a7a09f5a-3c70-4a8b-9fba-228748da17ab",
      "ordinal" : 2,
      "value" : "",
      "desc" : "Login password for authentication",
      "name" : "password",
      "valueType" : 0,
      "refId" : "a34fea04-c5b1-442c-975e-1655184f32f3",
      "refValue" : "somepassword",
      "created" : [ 2019, 7, 18, 15, 16, 0, 314000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 314000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "c7b2ea00-b38a-4fdf-aff2-1727d96ab5a4",
      "ordinal" : 3,
      "value" : "file:///Users/msewell/Desktop/pricing-petmeds.xml",
      "desc" : "URL to file",
      "name" : "url",
      "valueType" : 2,
      "refId" : "b102d706-66ce-4d8b-8944-ec8ba327b7b2",
      "refValue" : "ftp://someftphost/input/myfile.xml",
      "created" : [ 2019, 7, 18, 15, 16, 0, 315000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 315000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "15e36cd9-9ad8-4824-a249-8e611d57297b",
      "ordinal" : 4,
      "value" : "PricingOutput",
      "desc" : "Key name of input file",
      "name" : "inputKey",
      "valueType" : 0,
      "refId" : "06532b8a-daf2-457c-8c65-701e9cc0ec01",
      "refValue" : "InputFileKey",
      "created" : [ 2019, 7, 18, 15, 16, 0, 316000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 316000000 ],
      "language" : "js",
      "refLanguage" : "js"
    }, {
      "id" : "c54d8fd3-334b-4857-8fbb-0c38f1987ca9",
      "ordinal" : 5,
      "value" : "true",
      "desc" : "Should we overwrite",
      "name" : "overwrite",
      "valueType" : 0,
      "refId" : "5fa90437-e92d-468d-8890-edf5c8a0f2bc",
      "refValue" : "true",
      "created" : [ 2019, 7, 18, 15, 16, 0, 316000000 ],
      "updated" : [ 2019, 7, 18, 15, 16, 0, 316000000 ],
      "language" : "js",
      "refLanguage" : "js"
    } ],
    "job" : {
      "id" : "5bb99acd-7d3f-417b-a769-f98059f82f13",
      "name" : "ATG Catalog to SFCC",
      "enabled" : false,
      "desc" : "",
      "status" : "Ready",
      "key" : "IC-00000005",
      "readOnly" : false,
      "environment" : {
        "id" : "89689ad1-f311-4bd7-aacd-0188ded73369"
      },
      "domain" : {
        "id" : "bd629e46-0892-4060-abe4-fc7269247405",
        "name" : "Ignition",
        "timeZone" : "America/New_York",
        "applicationURL" : "http://demo.ignitiontransform.com",
        "awsRegion" : "us-east-1",
        "updated" : [ 2018, 10, 16, 18, 33, 20, 313000000 ],
        "created" : [ 1970, 1, 18, 14, 19, 5, 459000000 ]
      },
      "version" : 271,
      "updated" : [ 2019, 7, 18, 15, 17, 16, 508000000 ],
      "created" : [ 2019, 7, 18, 15, 16, 0, 289000000 ],
      "folder" : { },
      "promiseEnabled" : false
    },
    "name" : "Upload File from Dictionary Task",
    "clazz" : "core.UploadFileFromDictionaryTask",
    "enabled" : false,
    "desc" : "Task used to upload a file to FTP, SFTP, WebDav, S3, or Local from a dictionary entry.",
    "refId" : "fb285dc7-59db-4382-b004-df6ee6147084",
    "stopOnError" : true,
    "reportOnError" : true,
    "nodeTask" : false,
    "notify" : false,
    "nodeEligible" : true,
    "interval" : 0,
    "created" : [ 2019, 7, 18, 15, 16, 0, 312000000 ],
    "updated" : [ 2019, 7, 18, 15, 16, 0, 312000000 ],
    "reference" : false
  } ],
  "desc" : "",
  "status" : "Ready",
  "key" : "IC-00000005",
  "readOnly" : false,
  "environment" : {
    "id" : "89689ad1-f311-4bd7-aacd-0188ded73369",
    "name" : "Staging",
    "titleCss" : ".title {\n\tcolor: #d1e4f7;\n\tbackground-color: #2991e2;\n}",
    "updated" : [ 1970, 1, 1, 0, 0 ],
    "created" : [ 1970, 1, 1, 0, 0 ],
    "domain" : {
      "id" : "bd629e46-0892-4060-abe4-fc7269247405"
    }
  },
  "domain" : {
    "id" : "bd629e46-0892-4060-abe4-fc7269247405",
    "name" : "Ignition",
    "timeZone" : "America/New_York",
    "applicationURL" : "http://demo.ignitiontransform.com",
    "awsRegion" : "us-east-1",
    "updated" : [ 2018, 10, 16, 18, 33, 20, 313000000 ],
    "created" : [ 1970, 1, 18, 14, 19, 5, 459000000 ]
  },
  "version" : 271,
  "updated" : [ 2019, 7, 18, 15, 17, 16, 508000000 ],
  "created" : [ 2019, 7, 18, 15, 16, 0, 289000000 ],
  "folder" : { },
  "promiseEnabled" : false
}